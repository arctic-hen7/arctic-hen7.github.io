{"post":{"title":"How to Fix a Broken Ubuntu Machine After Uninstalling Rollup","author":"Me","description":"A pretty simple fix to a downright weird problem.","id":"bbb3e057-0f97-45a2-aa05-e791802fceee","contents":"<p>\nThis post details one of the strangest failures I&rsquo;ve ever seen in Ubuntu and how to fix it. For me, this occurred after deleting <code>rollup</code>, but it may have been something else for you! Please leave a comment if you&rsquo;ve had this problem and if you have any idea how it works!\n</p>\n\n<div id=\"outline-container-org2a51963\" class=\"outline-2\">\n<h2 id=\"org2a51963\">Scenario</h2>\n<div class=\"outline-text-2\" id=\"text-org2a51963\">\n<p>\nI was working on <a href=\"https://github.com/arctic-hen7/perseus\">Perseus</a> this morning, specifically removing the dependency on Rollup for the project. So, I naturally decided to remove Rollup completely from my system to test that there was no longer any dependency.\n</p>\n\n<p>\nSo, I did what made sense; <code>yarn global remove rollup</code>. And, to my dismay, <code>rollup</code> still worked as a command. I ran <code>which rollup</code> to find the exact location of the binary, which was in <code>~/.yarn/bin</code>. And then I did what you should <i>never</i> do. I decided to delete is manually with <code>rm</code>.\n</p>\n\n<p>\nNow it&rsquo;s worth noting that around this time my system had become very slow due to some kind of swap glitch, and so I decided to restart, having just deleted a binary manually. Now it&rsquo;s worth noting that I installed <code>rollup</code> through <code>yarn</code>, which I installed through <code>npm</code>, which I installed through <code>nvm</code> (Node version manager), which I installed with <code>curl</code>. That&rsquo;s <b>five</b> degrees of separation from anything that should be remotely system-critical, hence my confusion at what happened next.\n</p>\n\n<p>\nSo, booting my computer back up, everything was working as normal. I got to the login screen fine, the fan still whirring a bit from the swap glitch, and I typed in my password as usual. Then, as my desktop loaded, my mouse froze. I could not interact with my system in any way whatsoever. I rebooted <b>three</b> times, the exact same thing.\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-org33c099d\" class=\"outline-2\">\n<h2 id=\"org33c099d\">The Solution</h2>\n<div class=\"outline-text-2\" id=\"text-org33c099d\">\n<p>\nMy first thought was to change my login shell, which is <code>fish</code>, to something more mainstream like <code>bash</code>, as that could have some <code>rollup</code> dependency that might be causing a system hang. I did that with recovery mode, which I&rsquo;ll explain now (you&rsquo;ll need this), but to no avail.\n</p>\n</div>\n\n<div id=\"outline-container-org2c92299\" class=\"outline-3\">\n<h3 id=\"org2c92299\">Ubuntu Recovery Mode</h3>\n<div class=\"outline-text-3\" id=\"text-org2c92299\">\n<p>\nUbuntu has a very helpful boot mode called recovery mode that you can use to repair a broken system. You&rsquo;ll need to be able to boot your system for this, which was fine for me because it was a post-login issue.\n</p>\n\n<p>\nYou can access recovery mode by spamming <code>Esc</code> as your computer boots to stop UEFI fast boot, and then press <code>Enter</code> to continue boot. Immediately after that, hold down <code>Shift</code> (don&rsquo;t spam it) to get the GRUB menu, the bootloader. Then go down to something like <code>Advanced Options</code>, and then select <code>Recovery Mode</code> with the newest kernel (for this issue at least, but this can also be used to revert broken kernel upgrades). You should now be taken to a terminal-only screen (where you&rsquo;ll need to decrypt your hard drive and the like), and then you&rsquo;ll get a menu of options. This will boot your filesystem read-only, so it&rsquo;s practically impossible to do any damage without changing that, which you can do in 20.04 and later by selecting <code>Enable networking</code> and pressing <code>Enter</code>. Then press the option that lets you drop into a root shell, and you now have a root terminal on your system!\n</p>\n\n<p>\n<i>Aside: THIS is why you should encrypt your hard drive! Otherwise, yeah, anyone could use this to do <a href=\"https://r3xnation.wordpress.com/2016/11/01/how-to-hack-into-ubuntuany-version/\">anything they want</a> (weird link but good explanation) to your system.</i>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-orgc553a6b\" class=\"outline-3\">\n<h3 id=\"orgc553a6b\">Actually Fixing It</h3>\n<div class=\"outline-text-3\" id=\"text-orgc553a6b\">\n<p>\nAfter logging into a hung desktop with 10 minutes until I was needed on a Zoom meeting, I booted back into recovery mode, enabled networking, and switched to my user account with <code>su arctic_hen7</code>. I confirmed that <code>rollup</code> didn&rsquo;t exist, and then found that <code>yarn</code> didn&rsquo;t either. That was weird, and neither did <code>node</code>! In case you&rsquo;re thinking of weird <code>fish</code> stuff with loading custom binaries, I was in <code>bash</code> at this point. I still have no idea how deleting a binary manually managed to corrupt the entire JavaScript stack on my computer.\n</p>\n\n<p>\nNevertheless, I reinstalled Node using <code>nvm</code> (which I already had installed), reinstalled <code>yarn</code>, and then ran <code>yarn global add rollup</code> for good measure. I then tried popping into <code>fish</code> to see how it was going. I use <code>fish</code> with Starship, and it was telling me that the latter wasn&rsquo;t working. Two minutes until that Zoom meeting by the way.\n</p>\n\n<p>\nI frantically rebooted and crossed my fingers, noting that my shell was still set to <code>bash</code> in case Starship was still an issue. And it worked! Until a spontaneous logout 12 minutes later, which I think was unrelated, because it didn&rsquo;t happen again and still hasn&rsquo;t yet (I am so expecting one as a write this&#x2026;).\n</p>\n\n<p>\nAfter my Zoom meeting, I then tried using <code>fish</code> again: errors were gone. I assume Starship was trying to do something that&rsquo;s not allowed in recovery mode, but I can&rsquo;t yet remember the error message, so I have no idea what.\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-orga0dc3df\" class=\"outline-2\">\n<h2 id=\"orga0dc3df\">Closing Words</h2>\n<div class=\"outline-text-2\" id=\"text-orga0dc3df\">\n<p>\nSo, that was one of the weirdest issues I&rsquo;ve ever encountered in all my time using Linux, but thankfully it was a pretty easy fix. I have still found no documentation online about this, so hopefully this helps someone at some point in the future!\n</p>\n\n<p>\nAlso, if you&rsquo;ve had this issue, please let me know in the comments!\n</p>\n\n<p>\nOh, and the lesson from all this is to <b>NEVER MANUALLY DELETE BINARIES!!!</b>\n</p>\n</div>\n</div>","tags":["linux","quickfix"],"series":null,"toc":"<div id=\"table-of-contents\" role=\"doc-toc\">\n\n<div id=\"text-table-of-contents\" role=\"doc-toc\">\n<ul>\n<li><a href=\"post/bbb3e057-0f97-45a2-aa05-e791802fceee#org2a51963\">Scenario</a></li>\n<li><a href=\"post/bbb3e057-0f97-45a2-aa05-e791802fceee#org33c099d\">The Solution</a>\n<ul>\n<li><a href=\"post/bbb3e057-0f97-45a2-aa05-e791802fceee#org2c92299\">Ubuntu Recovery Mode</a></li>\n<li><a href=\"post/bbb3e057-0f97-45a2-aa05-e791802fceee#orgc553a6b\">Actually Fixing It</a></li>\n</ul>\n</li>\n<li><a href=\"post/bbb3e057-0f97-45a2-aa05-e791802fceee#orga0dc3df\">Closing Words</a></li>\n</ul>\n</div>\n</div>","date":"2021-09-15"},"source":".","mtime":{"secs_since_epoch":1671943463,"nanos_since_epoch":612395000}}
